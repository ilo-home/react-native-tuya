{"version":3,"file":"react-native-tuya.esm.js","sources":["../src/activator.ts","../src/bridgeUtils.ts","../src/device.ts","../src/home.ts","../src/homeDataManager.ts","../src/homeManager.ts","../src/homeMember.ts","../src/ota.ts","../src/timer.ts","../src/user.ts"],"sourcesContent":["import { DeviceBean } from './device';\nimport { NativeModules, Platform } from 'react-native';\nimport { DeviceDetailResponse } from './home';\n\nconst tuya = NativeModules.TuyaActivatorModule;\nconst tuyaBLEActivator = NativeModules.TuyaBLEActivatorModule;\nconst tuyaBLEScanner = NativeModules.TuyaBLEScannerModule;\n\nexport function openNetworkSettings() {\n  return tuya.openNetworkSettings({});\n}\n\nexport enum ActivatorType {\n  AP = 'THING_AP',\n  EZ = 'THING_EZ',\n  AP_4G_GATEWAY = 'THING_4G_GATEWAY',\n  QR = 'THING_QR',\n}\n\nexport type InitActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  time: number;\n  type: ActivatorType;\n};\n\nexport interface InitBluetoothActivatorParams {\n  deviceId?: string;\n  homeId: number;\n  ssid: string;\n  password: string;\n}\n\nexport function initActivator(\n  params: InitActivatorParams\n): Promise<DeviceDetailResponse> {\n  return tuya.initActivator(params);\n}\n\nexport function stopConfig() {\n  return tuya.stopConfig();\n}\n\nexport function startBluetoothScan() {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEScanner.startBluetoothScan();\n  }\n  return tuya.startBluetoothScan();\n}\n\nexport function initBluetoothDualModeActivator(\n  params: InitBluetoothActivatorParams\n): Promise<DeviceBean> {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEActivator.initActivator(params);\n  }\n  return tuya.initBluetoothDualModeActivator(params);\n}\n\nexport function getCurrentWifi(\n  success: (ssid: string) => void,\n  error: () => void\n) {\n  // We need the Allow While Using App location permission to use this.\n  return tuya.getCurrentWifi({}, success, error);\n}\n","import { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport const GROUPLISTENER = 'groupListener';\nexport const HARDWAREUPGRADELISTENER = 'hardwareUpgradeListener';\nexport const DEVLISTENER = 'devListener';\nexport const SUBDEVLISTENER = 'subDevListener';\nexport const HOMESTATUS = 'homeStatus';\nexport const HOMECHANGE = 'homeChange';\nexport const SINGLETRANSFER = 'SingleTransfer';\n\nlet eventEmitter = new NativeEventEmitter(NativeModules.TuyaRNEventEmitter);\n\nexport function addEvent(eventName: string, callback: (data: any) => any) {\n  return eventEmitter.addListener(eventName, callback);\n}\nexport const bridge = (key: string, id: string | number) => `${key}//${id}`;\n","import { NativeModules, EmitterSubscription } from 'react-native';\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type DeviceBean = {\n  productId: string;\n  devId: string;\n  verSw: string;\n  name: string;\n  dps: DeviceDps;\n};\n\nexport type DevListenerParams = {\n  devId: string;\n};\n\nexport type DevListenerType =\n  | 'onDpUpdate'\n  | 'onRemoved'\n  | 'onStatusChanged'\n  | 'onNetworkStatusChanged'\n  | 'onDevInfoUpdate'\n  | 'onFirmwareUpgradeSuccess'\n  | 'onFirmwareUpgradeFailure'\n  | 'onFirmwareUpgradeProgress';\n\nlet devListenerSubs: { [devId: string]: EmitterSubscription } = {};\n\nexport function registerDevListener(\n  params: DevListenerParams,\n  type: DevListenerType,\n  callback: (data: any) => void\n) {\n  tuya.registerDevListener(params);\n  const sub = addEvent(bridge(DEVLISTENER, params.devId), data => {\n    if (data.type === type) {\n      callback(data);\n    }\n  });\n  devListenerSubs[params.devId] = sub;\n}\n\nexport function unRegisterAllDevListeners() {\n  for (const devId in devListenerSubs) {\n    const sub = devListenerSubs[devId];\n    sub.remove();\n    tuya.unRegisterDevListener({ devId });\n  }\n  devListenerSubs = {};\n}\n\nexport type DeviceDpValue = boolean | number | string;\nexport type DeviceDps = {\n  [dpId: string]: DeviceDpValue;\n};\nexport type SendParams = {\n  devId: string;\n} & DeviceDps;\n\nexport function send(params: object) {\n  return tuya.send(params);\n}\n\nexport type RemoveDeviceParams = { devId: string };\n\nexport function removeDevice(params: RemoveDeviceParams): Promise<string> {\n  return tuya.removeDevice(params);\n}\n\nexport type RenameDeviceParams = { devId: string; name: string };\n\nexport function renameDevice(params: RenameDeviceParams): Promise<string> {\n  return tuya.renameDevice(params);\n}\n\nexport type GetDataPointStatsParams = {\n  devId: string;\n  DataPointTypeEnum: 'DAY' | 'WEEK' | 'MONTH';\n  number: number; // number of historical data result values, up to 50\n  dpId: string;\n  startTime: number; // in ms\n};\n\nexport function getDataPointStat(\n  params: GetDataPointStatsParams\n): Promise<any> {\n  return tuya.getDataPointStat(params);\n}\n","import { NativeModules } from 'react-native';\nimport { DeviceDps } from './device';\n\nconst tuya = NativeModules.TuyaHomeModule;\n\nexport type QueryRoomListParams = {\n  homeId?: number;\n};\nexport type QueryRoomListResponse = {\n  name: string;\n  displayOrder: number;\n  id: number;\n  roomId: number;\n}[];\n\nexport function queryRoomList(\n  params: QueryRoomListParams\n): Promise<QueryRoomListResponse> {\n  return tuya.queryRoomList(params);\n}\n\nexport type GetHomeDetailParams = {\n  homeId: number;\n};\nexport type DeviceDetailResponse = {\n  homeId: number;\n  isOnline: boolean;\n  productId: string;\n  devId: string;\n  verSw: string;\n  name: string;\n  dps: DeviceDps;\n  homeDisplayOrder: number;\n  roomId: number;\n};\nexport type GetHomeDetailResponse = {\n  deviceList: DeviceDetailResponse[];\n  groupList: any[];\n  meshList: any[];\n  sharedDeviceList: any[];\n  sharedGroupList: any[];\n};\n\nexport function getHomeDetail(\n  params: GetHomeDetailParams\n): Promise<GetHomeDetailResponse> {\n  return tuya.getHomeDetail(params);\n}\n\nexport type UpdateHomeParams = {\n  homeId: number;\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n};\n\nexport function updateHome(params: UpdateHomeParams): Promise<string> {\n  return tuya.updateHome(params);\n}\n\nexport type DismissHomeParams = {\n  homeId: number;\n};\n\nexport function dismissHome(params: DismissHomeParams): Promise<string> {\n  return tuya.dismissHome(params);\n}\n\nexport type SortRoomsParams = {\n  idList: number[];\n  homeId: number;\n};\n\nexport function sortRoom(params: SortRoomsParams): Promise<string> {\n  return tuya.sortRoom(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeDataManagerModule;\n\nexport type GetRoomDeviceListParams = {\n  homeId?: number;\n  roomId: number;\n};\n\nexport type GetRoomDeviceListResponse = {\n  deviceList: {}[];\n  groupList: {}[];\n};\n\nexport function getRoomDeviceList(\n  params: GetRoomDeviceListParams\n): Promise<GetRoomDeviceListResponse> {\n  return tuya.getRoomDeviceList(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeManagerModule;\n\nexport type CreateHomeParams = {\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n  rooms: string[];\n};\n\nexport function createHome(params: CreateHomeParams): Promise<string> {\n  return tuya.createHome(params);\n}\n\nexport type HomeDetailsResponse = {\n  name: string;\n  admin: boolean;\n  background: string;\n  dealStatus: 1 | 2; // 1 = unaccepted 2 = accepted\n  displayOrder: number;\n  geoName: string;\n  gid: number;\n  homeId: number;\n  lat: number;\n  lon: number;\n};\n\nexport type QueryHomeListResponse = HomeDetailsResponse[];\n\nexport async function queryHomeList(): Promise<QueryHomeListResponse> {\n  let homes = await tuya.queryHomeList();\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    homes = homes.map((m: any) => ({\n      ...m,\n      dealStatus: m.homeStatus,\n    }));\n  }\n  return homes;\n}\n\nexport type JoinFamilyParams = {\n  homeId: number;\n  action: boolean;\n};\n\nexport function joinFamily(params: JoinFamilyParams) {\n  return tuya.joinFamily(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeMemberModule;\n\nexport type QueryMemberListParams = { homeId: number };\nexport type MemberListItem = {\n  admin: boolean;\n  username: string;\n  id: number;\n  dealStatus: number;\n};\nexport type QueryMemberListResponse = MemberListItem[];\n\nexport async function queryMemberList(\n  params: QueryMemberListParams\n): Promise<QueryMemberListResponse> {\n  let members = await tuya.queryMemberList(params);\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    members = members.map((m: any) => ({\n      admin: m.admin,\n      username: m.account,\n      id: m.memberId,\n      dealStatus: m.memberStatus,\n    }));\n  }\n  return members;\n}\n\nexport type AddMemberParams = {\n  homeId: number;\n  userAccount: string; // email\n  countryCode: string;\n  name: string;\n  admin: boolean;\n};\n\nexport function addMember(params: AddMemberParams): Promise<any> {\n  return tuya.addMember(params);\n}\n\nexport type RemoveMemberParams = {\n  memberId: number;\n};\n\nexport function removeMember(params: RemoveMemberParams): Promise<any> {\n  return tuya.removeMember(params);\n}\n","import { NativeModules } from 'react-native';\nimport { addEvent, bridge, HARDWAREUPGRADELISTENER } from './bridgeUtils';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type StartOtaParams = {\n  devId: string;\n};\n\nexport function startOta(\n  params: StartOtaParams,\n  onSuccess: (data: any) => void,\n  onFailure: (data: any) => void,\n  onProgress: (data: any) => void\n) {\n  tuya.startOta(params);\n  return addEvent(bridge(HARDWAREUPGRADELISTENER, params.devId), data => {\n    if (data.type === 'onSuccess') {\n      onSuccess(data);\n    } else if (data.type === 'onFailure') {\n      onFailure(data);\n    } else if (data.type === 'onProgress') {\n      onProgress(data);\n    }\n  });\n}\n\nexport function getOtaInfo(params: StartOtaParams): Promise<any[]> {\n  return tuya.getOtaInfo(params);\n}\n","import { NativeModules } from 'react-native';\nimport { DeviceDps } from './device';\n\nconst tuya = NativeModules.TuyaTimerModule;\n\nexport type AddTimerWithTaskDpsParams = {\n  devId: number;\n  taskName: string;\n  loops: string; // Number of cycles \"0000000\", each 0: off, 1: on, from left to right: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\n  time: string; // e.g. 14:29\n  dps: DeviceDps;\n};\n\nexport function addTimerWithTask(\n  params: AddTimerWithTaskDpsParams\n): Promise<any> {\n  return tuya.addTimerWithTask(params);\n}\n\nexport type UpdateTimerWithTaskParams = AddTimerWithTaskDpsParams & {\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerWithTask(\n  params: UpdateTimerWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerWithTask(params);\n}\n\nexport type GetTimerTaskStatusWithDeviceIdParams = {\n  devId: number;\n};\n\nexport function getTimerTaskStatusWithDeviceId(\n  params: GetTimerTaskStatusWithDeviceIdParams\n): Promise<any> {\n  return tuya.getTimerTaskStatusWithDeviceId(params);\n}\n\nexport type GetAllTimerWithDeviceIdParams = {\n  devId: number;\n};\n\nexport type TimerTask = {\n  timerList: {\n    timerId: string;\n    loops: string;\n    time: string;\n    status: number;\n  }[];\n  timerTaskStatus: { open: boolean; timerName: string };\n};\n\nexport type GetAllTimerWithDeviceIdResponse = TimerTask[];\n\nexport async function getAllTimerWithDeviceId(\n  params: GetAllTimerWithDeviceIdParams\n): Promise<GetAllTimerWithDeviceIdResponse> {\n  const timers = await tuya.getAllTimerWithDeviceId(params);\n  timers.forEach((t: any) => {\n    t.timerTaskStatus.open = !!t.timerTaskStatus.open;\n  });\n  return timers;\n}\n\nexport type RemoveTimerWithTaskParams = {\n  devId: number;\n  taskName: string;\n  timerId: string;\n};\n\nexport function removeTimerWithTask(\n  params: RemoveTimerWithTaskParams\n): Promise<any> {\n  return tuya.removeTimerWithTask(params);\n}\n\nexport type UpdateTimerStatusWithTaskParams = {\n  devId: number;\n  taskName: string;\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerStatusWithTask(\n  params: UpdateTimerStatusWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerStatusWithTask(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaUserModule;\n\nexport function loginOrRegisterWithUid(\n  params: LoginOrRegisterAccountWithUidParams\n): Promise<any> {\n  return tuya.loginOrRegisterWithUid(params);\n}\n\nexport function registerAccountWithEmail(\n  params: RegisterAccountParams\n): Promise<any> {\n  return tuya.registerAccountWithEmail(params);\n}\n\nexport function loginWithEmailPassword(params: LoginWithPasswordParams): Promise<any> {\n  return tuya.loginWithEmailPassword(params);\n}\n\nexport function getValidateCode(\n  params: GetValidateCodeParams\n): Promise<any> {\n  return tuya.getValidateCode(params);\n}\n\nexport function checkValidateCode(\n  params: CheckValidateCodeParams\n): Promise<any> {\n  return tuya.checkValidateCode(params);\n}\n\nexport function resetEmailPassword(\n  params: ResetPasswordParams\n): Promise<any> {\n  return tuya.resetEmailPassword(params);\n}\n\nexport function logout(): Promise<string> {\n  return tuya.logout();\n}\n\nexport async function getCurrentUser(): Promise<User | null> {\n  const user = await tuya.getCurrentUser();\n  // The iOS SDK returns an empty user model but the Android one doesn't.\n  return user ? user : null;\n}\n\nexport function cancelAccount(): Promise<string> {\n  return tuya.cancelAccount();\n}\n\nexport enum ValidateCodeType {\n  REGISTER = 1,\n  LOGIN = 2,\n  RESET_PASSWORD = 3\n}\n\nexport type User = {\n  email: string;\n  username: string;\n  sid: string;\n  timezoneId: string;\n  uid: string;\n  userType: number;\n  headPic: string;\n  mobile: string;\n  nickName: string;\n  phoneCode: string;\n};\n\nexport type LoginOrRegisterAccountWithUidParams = {\n  countryCode: string;\n  id: string; // This can be an email address, phone number, generated uid\n  password: string; // This should match id\n};\n\nexport type RegisterAccountParams = {\n  countryCode: string;\n  id: string; // This can be an email address, phone number, generated uid\n  validateCode: string;\n  password: string;\n};\n\nexport type GetValidateCodeParams = {\n  countryCode: string;\n  region: string;\n  id: string; // Email address or phone number\n  type: ValidateCodeType;\n};\n\nexport type CheckValidateCodeParams = {\n  countryCode: string;\n  region: string;\n  id: string; // Email address or phone number\n  validateCode: string;\n  type: ValidateCodeType;\n};\n\nexport type LoginWithPasswordParams = {\n  id: string;\n  password: string;\n  countryCode: string;\n};\n\nexport type ResetPasswordParams = {\n  id: string;\n  countryCode: string;\n  validateCode: string;\n  newPassword: string;\n};\n"],"names":["tuya","NativeModules","TuyaActivatorModule","tuyaBLEActivator","TuyaBLEActivatorModule","tuyaBLEScanner","TuyaBLEScannerModule","openNetworkSettings","ActivatorType","initActivator","params","stopConfig","startBluetoothScan","Platform","OS","initBluetoothDualModeActivator","getCurrentWifi","success","error","GROUPLISTENER","HARDWAREUPGRADELISTENER","DEVLISTENER","SUBDEVLISTENER","HOMESTATUS","HOMECHANGE","SINGLETRANSFER","eventEmitter","NativeEventEmitter","TuyaRNEventEmitter","addEvent","eventName","callback","addListener","bridge","key","id","TuyaDeviceModule","devListenerSubs","registerDevListener","type","sub","devId","data","unRegisterAllDevListeners","remove","unRegisterDevListener","send","removeDevice","renameDevice","getDataPointStat","TuyaHomeModule","queryRoomList","getHomeDetail","updateHome","dismissHome","sortRoom","TuyaHomeDataManagerModule","getRoomDeviceList","queryHomeList","then","homes","map","m","_extends","dealStatus","homeStatus","e","Promise","reject","TuyaHomeManagerModule","createHome","joinFamily","queryMemberList","members","admin","username","account","memberId","memberStatus","TuyaHomeMemberModule","addMember","removeMember","startOta","onSuccess","onFailure","onProgress","getOtaInfo","getAllTimerWithDeviceId","timers","forEach","t","timerTaskStatus","open","TuyaTimerModule","addTimerWithTask","updateTimerWithTask","getTimerTaskStatusWithDeviceId","removeTimerWithTask","updateTimerStatusWithTask","getCurrentUser","user","TuyaUserModule","loginOrRegisterWithUid","registerAccountWithEmail","loginWithEmailPassword","getValidateCode","checkValidateCode","resetEmailPassword","logout","cancelAccount","ValidateCodeType"],"mappings":"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"}