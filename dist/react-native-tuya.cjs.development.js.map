{"version":3,"file":"react-native-tuya.cjs.development.js","sources":["../src/activator.ts","../src/bridgeUtils.ts","../src/device.ts","../src/home.ts","../src/homeDataManager.ts","../src/homeManager.ts","../src/homeMember.ts","../src/ota.ts","../src/timer.ts","../src/user.ts"],"sourcesContent":["import { DeviceBean } from './device';\nimport { NativeModules, Platform } from 'react-native';\nimport { DeviceDetailResponse } from './home';\n\nconst tuya = NativeModules.TuyaActivatorModule;\nconst tuyaBLEActivator = NativeModules.TuyaBLEActivatorModule;\nconst tuyaBLEScanner = NativeModules.TuyaBLEScannerModule;\n\nexport function openNetworkSettings() {\n  return tuya.openNetworkSettings({});\n}\n\nexport enum ActivatorType {\n  AP = 'THING_AP',\n  EZ = 'THING_EZ',\n  AP_4G_GATEWAY = 'THING_4G_GATEWAY',\n  QR = 'THING_QR',\n}\n\nexport type InitActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  time: number;\n  type: ActivatorType;\n};\n\nexport interface InitBluetoothActivatorParams {\n  deviceId?: string;\n  homeId: number;\n  ssid: string;\n  password: string;\n}\n\nexport async function initActivator(\n  params: InitActivatorParams\n): Promise<DeviceDetailResponse> {\n  const device = await tuya.initActivator(params);\n  \n  // Tuya's Android SDK uses different property names and has different types than the iOS SDK...\n  if (Platform.OS === 'android') {\n    device.homeId = parseInt(device.ownerId);\n    device.category = device.deviceCategory;\n  }\n\n  return device;\n}\n\nexport function stopActivator() {\n  return tuya.stopActivator();\n}\n\nexport function destroyActivator() {\n  return tuya.destroyActivator();\n}\n\nexport function startBluetoothScan() {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEScanner.startBluetoothScan();\n  }\n  return tuya.startBluetoothScan();\n}\n\nexport function initBluetoothDualModeActivator(\n  params: InitBluetoothActivatorParams\n): Promise<DeviceBean> {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEActivator.initActivator(params);\n  }\n  return tuya.initBluetoothDualModeActivator(params);\n}\n\nexport function getCurrentWifi(\n  success: (ssid: string) => void,\n  error: () => void\n) {\n  // We need the Allow While Using App location permission to use this.\n  return tuya.getCurrentWifi({}, success, error);\n}\n","import { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport const GROUPLISTENER = 'groupListener';\nexport const HARDWAREUPGRADELISTENER = 'hardwareUpgradeListener';\nexport const DEVLISTENER = 'devListener';\nexport const SUBDEVLISTENER = 'subDevListener';\nexport const HOMESTATUS = 'homeStatus';\nexport const HOMECHANGE = 'homeChange';\nexport const SINGLETRANSFER = 'SingleTransfer';\n\nlet eventEmitter = new NativeEventEmitter(NativeModules.TuyaRNEventEmitter);\n\nexport function addEvent(eventName: string, callback: (data: any) => any) {\n  return eventEmitter.addListener(eventName, callback);\n}\nexport const bridge = (key: string, id: string | number) => `${key}//${id}`;\n","import { NativeModules, EmitterSubscription } from 'react-native';\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type DeviceBean = {\n  productId: string;\n  devId: string;\n  verSw: string;\n  name: string;\n  dps: DeviceDps;\n};\n\nexport type DevListenerParams = {\n  devId: string;\n};\n\nexport type DevListenerType =\n  | 'onDpUpdate'\n  | 'onRemoved'\n  | 'onStatusChanged'\n  | 'onNetworkStatusChanged'\n  | 'onDevInfoUpdate'\n  | 'onFirmwareUpgradeSuccess'\n  | 'onFirmwareUpgradeFailure'\n  | 'onFirmwareUpgradeProgress';\n\nlet devListenerSubs: { [devId: string]: EmitterSubscription } = {};\n\nexport function registerDevListener(\n  params: DevListenerParams,\n  type: DevListenerType,\n  callback: (data: any) => void\n) {\n  tuya.registerDevListener(params);\n  const sub = addEvent(bridge(DEVLISTENER, params.devId), data => {\n    if (data.type === type) {\n      callback(data);\n    }\n  });\n  devListenerSubs[params.devId] = sub;\n}\n\nexport function unRegisterAllDevListeners() {\n  for (const devId in devListenerSubs) {\n    const sub = devListenerSubs[devId];\n    sub.remove();\n    tuya.unRegisterDevListener({ devId });\n  }\n  devListenerSubs = {};\n}\n\nexport type DeviceDpValue = boolean | number | string | Record<string, string | number | boolean>;\nexport type DeviceDps = {\n  [dpId: string]: DeviceDpValue;\n};\nexport type SendParams = {\n  devId: string;\n  command: DeviceDps;\n}\n\nexport function send(params: SendParams) {\n  return tuya.send(params);\n}\n\nexport type RemoveDeviceParams = { devId: string };\n\nexport function removeDevice(params: RemoveDeviceParams): Promise<string> {\n  return tuya.removeDevice(params);\n}\n\nexport type RenameDeviceParams = { devId: string; name: string };\n\nexport function renameDevice(params: RenameDeviceParams): Promise<string> {\n  return tuya.renameDevice(params);\n}\n\nexport type GetDataPointStatsParams = {\n  devId: string;\n  DataPointTypeEnum: 'DAY' | 'WEEK' | 'MONTH';\n  number: number; // number of historical data result values, up to 50\n  dpId: string;\n  startTime: number; // in ms\n};\n\nexport function getDataPointStat(\n  params: GetDataPointStatsParams\n): Promise<any> {\n  return tuya.getDataPointStat(params);\n}\n","import { NativeModules, Platform } from 'react-native';\nimport { DeviceDps } from './device';\n\nconst tuya = NativeModules.TuyaHomeModule;\n\nexport type QueryRoomListParams = {\n  homeId?: number;\n};\nexport type QueryRoomListResponse = {\n  name: string;\n  displayOrder: number;\n  id: number;\n  roomId: number;\n}[];\n\nexport function queryRoomList(\n  params: QueryRoomListParams\n): Promise<QueryRoomListResponse> {\n  return tuya.queryRoomList(params);\n}\n\nexport type GetHomeDetailParams = {\n  homeId: number;\n};\nexport type DeviceDetailResponse = {\n  homeId: number;\n  isOnline: boolean;\n  isLocalOnline: boolean; \n  cloudOnline: boolean;\n  productId: string;\n  category: string; // e.g. \"dj\"\n  categoryCode: string; // e.g. \"wf_ble_dj\"\n  devId: string;\n  iconUrl: string;\n  verSw: string;\n  name: string;\n  dps: DeviceDps;\n  homeDisplayOrder: number;\n  roomId: number;\n};\nexport type GetHomeDetailResponse = {\n  deviceList: DeviceDetailResponse[];\n  groupList: any[];\n  meshList: any[];\n  sharedDeviceList: any[];\n  sharedGroupList: any[];\n};\n\nexport async function getHomeDetail(\n  params: GetHomeDetailParams\n): Promise<GetHomeDetailResponse> {\n  const home = await tuya.getHomeDetail(params);\n\n  // Tuya's Android SDK uses different property names and has different types than the iOS SDK...\n  if (Platform.OS === 'android') {\n    home.deviceList = home.deviceList.map((device: any) => ({\n      ...device,\n      homeId: parseInt(device.ownerId),\n      category: device.deviceCategory\n    }));\n  }\n\n  return home;\n}\n\nexport type UpdateHomeParams = {\n  homeId: number;\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n};\n\nexport function updateHome(params: UpdateHomeParams): Promise<string> {\n  return tuya.updateHome(params);\n}\n\nexport type DismissHomeParams = {\n  homeId: number;\n};\n\nexport function dismissHome(params: DismissHomeParams): Promise<string> {\n  return tuya.dismissHome(params);\n}\n\nexport type SortRoomsParams = {\n  idList: number[];\n  homeId: number;\n};\n\nexport function sortRoom(params: SortRoomsParams): Promise<string> {\n  return tuya.sortRoom(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeDataManagerModule;\n\nexport type GetRoomDeviceListParams = {\n  homeId?: number;\n  roomId: number;\n};\n\nexport type GetRoomDeviceListResponse = {\n  deviceList: {}[];\n  groupList: {}[];\n};\n\nexport function getRoomDeviceList(\n  params: GetRoomDeviceListParams\n): Promise<GetRoomDeviceListResponse> {\n  return tuya.getRoomDeviceList(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeManagerModule;\n\nexport type CreateHomeParams = {\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n  rooms: string[];\n};\n\nexport function createHome(params: CreateHomeParams): Promise<string> {\n  return tuya.createHome(params);\n}\n\nexport type HomeDetailsResponse = {\n  name: string;\n  admin: boolean;\n  background: string;\n  dealStatus: 1 | 2 | 3; // 1 = unaccepted, 2 = accepted, 3 = rejected\n  displayOrder: number;\n  geoName: string;\n  gid: number;\n  role: -1 | 0 | 1 | 2 | 999; // -1 = custom, 0 = member, 1 = admin, 2 = owner, -999 = invalid\n  homeId: number;\n  lat: number;\n  lon: number;\n};\n\nexport type QueryHomeListResponse = HomeDetailsResponse[];\n\nexport async function queryHomeList(): Promise<QueryHomeListResponse> {\n  let homes = await tuya.queryHomeList();\n\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    homes = homes.map((m: any) => ({\n      ...m,\n      dealStatus: m.homeStatus,\n    }));\n  }\n  \n  return homes;\n}\n\nexport type JoinFamilyParams = {\n  homeId: number;\n  action: boolean;\n};\n\nexport function joinFamily(params: JoinFamilyParams) {\n  return tuya.joinFamily(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeMemberModule;\n\nexport type QueryMemberListParams = { homeId: number };\nexport type MemberListItem = {\n  admin: boolean;\n  username: string;\n  id: number;\n  dealStatus: number;\n};\nexport type QueryMemberListResponse = MemberListItem[];\n\nexport async function queryMemberList(\n  params: QueryMemberListParams\n): Promise<QueryMemberListResponse> {\n  let members = await tuya.queryMemberList(params);\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    members = members.map((m: any) => ({\n      admin: m.admin,\n      username: m.account,\n      id: m.memberId,\n      dealStatus: m.memberStatus,\n    }));\n  }\n  return members;\n}\n\nexport type AddMemberParams = {\n  homeId: number;\n  userAccount: string; // email\n  countryCode: string;\n  name: string;\n  admin: boolean;\n};\n\nexport function addMember(params: AddMemberParams): Promise<any> {\n  return tuya.addMember(params);\n}\n\nexport type RemoveMemberParams = {\n  memberId: number;\n};\n\nexport function removeMember(params: RemoveMemberParams): Promise<any> {\n  return tuya.removeMember(params);\n}\n","import { NativeModules } from 'react-native';\nimport { addEvent, bridge, HARDWAREUPGRADELISTENER } from './bridgeUtils';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type StartOtaParams = {\n  devId: string;\n};\n\nexport function startOta(\n  params: StartOtaParams,\n  onSuccess: (data: any) => void,\n  onFailure: (data: any) => void,\n  onProgress: (data: any) => void\n) {\n  tuya.startOta(params);\n  return addEvent(bridge(HARDWAREUPGRADELISTENER, params.devId), data => {\n    if (data.type === 'onSuccess') {\n      onSuccess(data);\n    } else if (data.type === 'onFailure') {\n      onFailure(data);\n    } else if (data.type === 'onProgress') {\n      onProgress(data);\n    }\n  });\n}\n\nexport function getOtaInfo(params: StartOtaParams): Promise<any[]> {\n  return tuya.getOtaInfo(params);\n}\n","import { NativeModules, Platform } from 'react-native';\nimport { DeviceDps } from './device';\n\nconst tuya = NativeModules.TuyaTimerModule;\n\nexport type AddTimerWithTaskDpsParams = {\n  devId: string;\n  taskName: string;\n  loops: string; // Number of cycles \"0000000\", each 0: off, 1: on, from left to right: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\n  time: string; // e.g. 14:29\n  dps: DeviceDps;\n};\n\nexport function addTimerWithTask(\n  params: AddTimerWithTaskDpsParams\n): Promise<any> {\n  return tuya.addTimerWithTask(params);\n}\n\nexport type UpdateTimerWithTaskParams = AddTimerWithTaskDpsParams & {\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerWithTask(\n  params: UpdateTimerWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerWithTask(params);\n}\n\nexport type GetTimerTaskStatusWithDeviceIdParams = {\n  devId: string;\n};\n\nexport function getTimerTaskStatusWithDeviceId(\n  params: GetTimerTaskStatusWithDeviceIdParams\n): Promise<any> {\n  return tuya.getTimerTaskStatusWithDeviceId(params);\n}\n\nexport type GetAllTimerWithDeviceIdParams = {\n  devId: string;\n};\n\nexport type TimerTask = {\n  timerList: {\n    timerId: string;\n    loops: string;\n    time: string;\n    status: boolean; // true = open, false = closed\n    dps: DeviceDps;\n  }[];\n  timerTaskStatus: { open: boolean; timerName: string };\n};\n\nexport type GetAllTimerWithDeviceIdResponse = TimerTask[];\n\nexport async function getAllTimerWithDeviceId(\n  params: GetAllTimerWithDeviceIdParams\n): Promise<GetAllTimerWithDeviceIdResponse> {\n  const timers = await tuya.getAllTimerWithDeviceId(params);\n\n  timers.forEach((t: any) => {\n    t.timerTaskStatus.open = !!t.timerTaskStatus.open;\n\n    // Tuya's Android SDK uses different property names and has different types than the iOS SDK...\n    t.timerList = t.timerList.map((timer: any) => ({\n      ...timer,\n      status: !!timer.status,\n      dps: Platform.OS === 'android' ? JSON.parse(timer.value) : timer.dps\n    }));\n    \n  });\n\n  return timers;\n}\n\nexport type GetTimerWithTaskParams = {\n  devId: string;\n  taskName: string;\n};\n\nexport type GetTimerWithTaskResponse = TimerTask[];\n\nexport async function getTimerWithTask(\n  params: GetTimerWithTaskParams\n): Promise<GetTimerWithTaskResponse> {\n  const timers = await tuya.getTimerWithTask(params);\n\n  timers.forEach((t: any) => {\n    t.timerTaskStatus.open = !!t.timerTaskStatus.open;\n\n    // Tuya's Android SDK uses different property names and has different types than the iOS SDK...\n    t.timerList = t.timerList.map((timer: any) => ({\n      ...timer,\n      status: !!timer.status,\n      dps: Platform.OS === 'android' ? JSON.parse(timer.value) : timer.dps\n    }));\n\n  });\n  \n  return timers;\n}\n\nexport type RemoveTimerWithTaskParams = {\n  devId: string;\n  taskName: string;\n  timerId: string;\n};\n\nexport function removeTimerWithTask(\n  params: RemoveTimerWithTaskParams\n): Promise<any> {\n  return tuya.removeTimerWithTask(params);\n}\n\nexport type UpdateTimerStatusWithTaskParams = {\n  devId: string;\n  taskName: string;\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerStatusWithTask(\n  params: UpdateTimerStatusWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerStatusWithTask(params);\n}\n\nexport type UpdateTimerTaskStatusWithTaskParams = {\n  devId: string;\n  taskName: string;\n  status: 1 | 2 | 3; // 1 = open, 2 = close, 3 = delete\n};\n\nexport function updateTimerTaskStatusWithTask(\n  params: UpdateTimerTaskStatusWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerTaskStatusWithTask(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaUserModule;\n\nexport function loginOrRegisterWithUid(\n  params: LoginOrRegisterAccountWithUidParams\n): Promise<any> {\n  return tuya.loginOrRegisterWithUid(params);\n}\n\nexport function registerAccountWithEmail(\n  params: RegisterAccountParams\n): Promise<any> {\n  return tuya.registerAccountWithEmail(params);\n}\n\nexport function loginWithEmailPassword(params: LoginWithPasswordParams): Promise<any> {\n  return tuya.loginWithEmailPassword(params);\n}\n\nexport function getValidateCode(\n  params: GetValidateCodeParams\n): Promise<any> {\n  return tuya.getValidateCode(params);\n}\n\nexport function checkValidateCode(\n  params: CheckValidateCodeParams\n): Promise<any> {\n  return tuya.checkValidateCode(params);\n}\n\nexport function resetEmailPassword(\n  params: ResetPasswordParams\n): Promise<any> {\n  return tuya.resetEmailPassword(params);\n}\n\nexport function logout(): Promise<string> {\n  return tuya.logout();\n}\n\nexport async function getCurrentUser(): Promise<User | null> {\n  const user = await tuya.getCurrentUser();\n  // The iOS SDK returns an empty user model but the Android one doesn't.\n  return user ? user : null;\n}\n\nexport function cancelAccount(): Promise<string> {\n  return tuya.cancelAccount();\n}\n\nexport enum ValidateCodeType {\n  REGISTER = 1,\n  LOGIN = 2,\n  RESET_PASSWORD = 3\n}\n\nexport type User = {\n  email: string;\n  username: string;\n  sid: string;\n  timezoneId: string;\n  uid: string;\n  userType: number;\n  headPic: string;\n  mobile: string;\n  nickName: string;\n  phoneCode: string;\n};\n\nexport type LoginOrRegisterAccountWithUidParams = {\n  countryCode: string;\n  id: string; // This can be an email address, phone number, generated uid\n  password: string; // This should match id\n};\n\nexport type RegisterAccountParams = {\n  countryCode: string;\n  id: string; // This can be an email address, phone number, generated uid\n  validateCode: string;\n  password: string;\n};\n\nexport type GetValidateCodeParams = {\n  countryCode: string;\n  region: string;\n  id: string; // Email address or phone number\n  type: ValidateCodeType;\n};\n\nexport type CheckValidateCodeParams = {\n  countryCode: string;\n  region: string;\n  id: string; // Email address or phone number\n  validateCode: string;\n  type: ValidateCodeType;\n};\n\nexport type LoginWithPasswordParams = {\n  id: string;\n  password: string;\n  countryCode: string;\n};\n\nexport type ResetPasswordParams = {\n  id: string;\n  countryCode: string;\n  validateCode: string;\n  newPassword: string;\n};\n"],"names":["initActivator","params","tuya","then","device","Platform","OS","homeId","parseInt","ownerId","category","deviceCategory","e","Promise","reject","NativeModules","TuyaActivatorModule","tuyaBLEActivator","TuyaBLEActivatorModule","tuyaBLEScanner","TuyaBLEScannerModule","openNetworkSettings","ActivatorType","stopActivator","destroyActivator","startBluetoothScan","initBluetoothDualModeActivator","getCurrentWifi","success","error","GROUPLISTENER","HARDWAREUPGRADELISTENER","DEVLISTENER","SUBDEVLISTENER","HOMESTATUS","HOMECHANGE","SINGLETRANSFER","eventEmitter","NativeEventEmitter","TuyaRNEventEmitter","addEvent","eventName","callback","addListener","bridge","key","id","TuyaDeviceModule","devListenerSubs","registerDevListener","type","sub","devId","data","unRegisterAllDevListeners","remove","unRegisterDevListener","send","removeDevice","renameDevice","getDataPointStat","getHomeDetail","home","deviceList","map","_extends","TuyaHomeModule","queryRoomList","updateHome","dismissHome","sortRoom","TuyaHomeDataManagerModule","getRoomDeviceList","queryHomeList","homes","m","dealStatus","homeStatus","TuyaHomeManagerModule","createHome","joinFamily","queryMemberList","members","admin","username","account","memberId","memberStatus","TuyaHomeMemberModule","addMember","removeMember","startOta","onSuccess","onFailure","onProgress","getOtaInfo","getTimerWithTask","timers","forEach","t","timerTaskStatus","open","timerList","timer","status","dps","JSON","parse","value","getAllTimerWithDeviceId","TuyaTimerModule","addTimerWithTask","updateTimerWithTask","getTimerTaskStatusWithDeviceId","removeTimerWithTask","updateTimerStatusWithTask","updateTimerTaskStatusWithTask","getCurrentUser","user","TuyaUserModule","loginOrRegisterWithUid","registerAccountWithEmail","loginWithEmailPassword","getValidateCode","checkValidateCode","resetEmailPassword","logout","cancelAccount","ValidateCodeType"],"mappings":"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"}